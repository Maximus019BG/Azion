name: Update Branches

on:
  push:
    branches:
      - master

jobs:
  update-branches:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Git
        run: |
          git config --global user.name 'github-azion[bot]'
          git config --global user.email 'github-azion[bot]@users.noreply.github.com'
          git config --global pull.rebase false
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/Maximus019BG/Azion.git

      - name: Update dev
        run: |
          if git show-ref --verify --quiet refs/heads/dev; then
            git checkout dev
          else
            git checkout -b dev
          fi
          git pull origin dev --allow-unrelated-histories || true
          git pull origin master --allow-unrelated-histories
          git push origin dev

      - name: Update dev-mobile
        run: |
          if git show-ref --verify --quiet refs/heads/dev-mobile; then
            git checkout dev-mobile
          else
            git checkout -b dev-mobile
          fi
          git pull origin dev-mobile --allow-unrelated-histories || true
          git pull origin master --allow-unrelated-histories
          git push origin dev-mobile

      - name: Update dev-desktop
        run: |
          if git show-ref --verify --quiet refs/heads/dev-desktop; then
            git checkout dev-desktop
          else
            git checkout -b dev-desktop
          fi
          git pull origin dev-desktop --allow-unrelated-histories || true
          git pull origin master --allow-unrelated-histories
          git push origin dev-desktop

      - name: Update test-dev
        run: |
          if git show-ref --verify --quiet refs/heads/test-dev; then
            git checkout test-dev
          else
            git checkout -b test-dev
          fi
          git pull origin test-dev --allow-unrelated-histories || true
          git pull origin master --allow-unrelated-histories
          git push origin test-dev

      - name: Update test-master
        run: |
          if git show-ref --verify --quiet refs/heads/test-master; then
            git checkout test-master
          else
            git checkout -b test-master
          fi
          git pull origin test-master --allow-unrelated-histories || true
          git pull origin master --allow-unrelated-histories
          git push origin test-master

      - name: Update gh-community
        run: |
          if git show-ref --verify --quiet refs/heads/gh-community; then
            git checkout gh-community
          else
            git checkout -b gh-community
          fi
          git pull origin gh-community --allow-unrelated-histories || true
          git pull origin master --allow-unrelated-histories
          git push origin gh-community

      - name: Versioning
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v.0.0.0")
          TAG=${TAG#"v."}
          IFS='.' read -r major minor patch <<< "$TAG"
          patch=$((patch + 1))
      
          if [ "$patch" -ge 10 ]; then
            patch=0
            minor=$((minor + 1))
          fi
      
          if [ "$minor" -ge 10 ]; then
            minor=0
            major=$((major + 1))
          fi
      
          NEW_TAG="v.$major.$minor.$patch"
          git tag -a "$NEW_TAG" -m "New version of Azion"
      
          git push origin ":refs/tags/$NEW_TAG" || true
          git push origin "$NEW_TAG"
      
          gh release create "$NEW_TAG" --title "$NEW_TAG" --notes "New version of Azion v$NEW_TAG"